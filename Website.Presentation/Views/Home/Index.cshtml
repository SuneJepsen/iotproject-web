
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_Layout.cshtml";
}

<h2>Index</h2>


<script>
    $(document).ready(function () {
        // do your magic here
        console.log("ready!");

        var inferredData = [
            { StartDate: 1525373817000, Count: 2 },
            { StartDate: 1525373818000, Count: -1 },
            { StartDate: 1525373819000, Count: 5 },
            { StartDate: 1525373820000, Count: 2 },
            { StartDate: 1525373821000, Count: -3 },
            { StartDate: 1525373822000, Count: 2 },
            { StartDate: 1525373823000, Count: -1 },
            { StartDate: 1525373824000, Count: -1 },
            { StartDate: 1525373825000, Count: 5 },
            { StartDate: 1525373826000, Count: 4 },
            { StartDate: 1525373827000, Count: 2 },
            { StartDate: 1525373828000, Count: -2 }
        ];

        var updatedinferred = [
            { StartDate: 1525373829000, Count: 1 },
            { StartDate: 1525373830000, Count: -4 },
            { StartDate: 1525373831000, Count: -2 }, 
            { StartDate: 1525373832000, Count: 3 }
        ];

        var updatedinferred2 = [
            { StartDate: 1525373833000, Count: 5 },
            { StartDate: 1525373834000, Count: 4 }
        ];

        //$.ajax({
        //    url: "http://webapiaccess20180420013135.azurewebsites.net/api/values", success: function (result) {
        //        console.log(result);
        //        inferredData = result;
        //    }
        //});

        var createGraph = function (divName, init_time) {
            var div = document.createElement("div");
            div.setAttribute("id", divName);
            document.body.appendChild(div);

            var layout = {
                xaxis: {
                    type: 'date',
                    range: [init_time, init_time],
                    rangeslider: { range: [init_time, init_time] },
                }
            };
            var data = [
                {
                    x: [init_time],
                    y: [0],
                    mode: 'lines',
                    line: { color: '#80CAF6' }
                }
            ];
            Plotly.plot(divName, data, layout);
        }

        var count = 0;
        var init_time = inferredData[0].StartDate;

        var updateGraph = function (data, div, interval) {
            var end_time = data[data.length - 1].StartDate;
            var start_time = end_time - interval;
            
            var update = {
                x: [data.map(x => x.StartDate)],
                y: [data.map(x => count += x.Count)]
            }

            var minuteView = {
                xaxis: {
                    type: 'date',
                    range: [start_time, end_time],
                    rangeslider: { range: [init_time, end_time] },
                }
            };

            Plotly.relayout(div, minuteView);
            Plotly.extendTraces(div, update, [0])
        }

        createGraph('myDiv', init_time);
        createGraph('myDiv2', init_time);

        setTimeout(function () { updateGraph(inferredData, 'myDiv', 10000); }, 1000);
        setTimeout(function () { updateGraph(updatedinferred, 'myDiv2', 10000); }, 2000);
        setTimeout(function () { updateGraph(updatedinferred2, 'myDiv', 10000); }, 3000);

    });
</script>